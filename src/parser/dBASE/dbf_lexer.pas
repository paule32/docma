(* global definitions: *)



function TParser_dBASE.yylex : Integer;

procedure yyaction ( yyruleno : Integer );
  (* local definitions: *)

begin
  (* actions: *)
  case yyruleno of
  1:
             begin inc(yylineno); end;
  2:
             begin end;
  3:
             begin inc(yylineno); end;

  4:
         begin
         while true do
         begin
           chr := get_char;
           if (chr = #10) or (chr = #0) then
           break;
         end;
         inc(yylineno); end;
  5:
         begin
         while true do
         begin
           chr := get_char;
           if chr = #0 then
           yyerror('Error: unterminated comment.') else
           if chr = #10 then
           begin
             inc(yylineno);
             break;
           end;
         end; end;
  6:
         begin
         while true do
         begin
           chr := get_char;
           if chr = #0  then
           yyerror('Error: unterminated comment.') else
           if chr = #10 then
           begin
             inc(yylineno);
             break;
           end;
         end; end;

  7:
         begin return(TOK_NOT);               end;

  8:
         begin return(TOK_PUNCTDIV);          end;
  9:
         begin return(TOK_PUNCT);             end;
  10:
         begin return(TOK_COMMA);             end;
  11:
         begin return(TOK_SEMICOLON);         end;

  12:
         begin return(TOK_HARD_PAREN_OPEN);   end;
  13:
         begin return(TOK_HARD_PAREN_CLOSE);  end;

  14:
         begin return(TOK_SOFT_PAREN_OPEN);   end;
  15:
         begin return(TOK_SOFT_PAREN_CLOSE);  end;

  16:
         begin return(TOK_REL);               end;
  17:
         begin return(TOK_ASSIGN);            end;

  18:
   begin return(TOK_ADD); end;
  19:
   begin return(TOK_SUB); end;
  20:
   begin return(TOK_MUL); end;
  21:
   begin return(TOK_DIV); end;
  22:
   begin return(TOK_MOD); end;

  23:
      begin return(TOK_PRINT_WITH_NL); end;
  24:
      begin return(TOK_PRINT_NO_NL);   end;

  25:
                   begin
     yylval.yySelfString := yytext;
     return(TOK_STRING); end;

  26:
          begin
     yylval.yyNumberString := yytext;
     return(TOK_NUM); end;

  27:
                                     begin return(TOK_ENDFOR);    end;
  28:
                                     begin return(TOK_FOR);       end;
  29:
                                     begin return(TOK_SKIP);      end;
  30:
                                     begin return(TOK_TO);        end;
  31:
                                     begin return(TOK_USE);       end;

  32:
          begin return(TOK_ID); end;

  33:
  begin yyerror('Error: unknow character.'); end;

  end;
end(*yyaction*);

(* DFA table: *)

type YYTRec = record
                cc : set of Char;
                s  : Integer;
              end;

const

yynmarks   = 115;
yynmatches = 115;
yyntrans   = 186;
yynstates  = 87;

yyk : array [1..yynmarks] of Integer = (
  { 0: }
  2,
  26,
  { 1: }
  2,
  26,
  { 2: }
  2,
  33,
  { 3: }
  1,
  3,
  { 4: }
  21,
  33,
  { 5: }
  20,
  33,
  { 6: }
  33,
  { 7: }
  7,
  33,
  { 8: }
  8,
  33,
  { 9: }
  9,
  26,
  33,
  { 10: }
  10,
  33,
  { 11: }
  11,
  33,
  { 12: }
  12,
  33,
  { 13: }
  13,
  33,
  { 14: }
  14,
  33,
  { 15: }
  15,
  33,
  { 16: }
  16,
  33,
  { 17: }
  18,
  33,
  { 18: }
  19,
  33,
  { 19: }
  22,
  33,
  { 20: }
  23,
  33,
  { 21: }
  33,
  { 22: }
  26,
  33,
  { 23: }
  33,
  { 24: }
  33,
  { 25: }
  33,
  { 26: }
  33,
  { 27: }
  33,
  { 28: }
  32,
  33,
  { 29: }
  32,
  33,
  { 30: }
  32,
  33,
  { 31: }
  32,
  33,
  { 32: }
  32,
  33,
  { 33: }
  32,
  33,
  { 34: }
  33,
  { 35: }
  2,
  { 36: }
  1,
  { 37: }
  4,
  { 38: }
  5,
  { 39: }
  6,
  { 40: }
  17,
  { 41: }
  26,
  { 42: }
  24,
  { 43: }
  { 44: }
  { 45: }
  25,
  { 46: }
  { 47: }
  { 48: }
  { 49: }
  30,
  { 50: }
  { 51: }
  32,
  { 52: }
  32,
  { 53: }
  32,
  { 54: }
  32,
  { 55: }
  32,
  { 56: }
  32,
  { 57: }
  32,
  { 58: }
  32,
  { 59: }
  30,
  32,
  { 60: }
  30,
  32,
  { 61: }
  32,
  { 62: }
  32,
  { 63: }
  { 64: }
  28,
  { 65: }
  { 66: }
  31,
  { 67: }
  32,
  { 68: }
  32,
  { 69: }
  28,
  32,
  { 70: }
  28,
  32,
  { 71: }
  32,
  { 72: }
  32,
  { 73: }
  31,
  32,
  { 74: }
  31,
  32,
  { 75: }
  { 76: }
  29,
  { 77: }
  32,
  { 78: }
  32,
  { 79: }
  29,
  32,
  { 80: }
  29,
  32,
  { 81: }
  { 82: }
  32,
  { 83: }
  32,
  { 84: }
  27,
  { 85: }
  27,
  32,
  { 86: }
  27,
  32
);

yym : array [1..yynmatches] of Integer = (
{ 0: }
  2,
  26,
{ 1: }
  2,
  26,
{ 2: }
  2,
  33,
{ 3: }
  1,
  3,
{ 4: }
  21,
  33,
{ 5: }
  20,
  33,
{ 6: }
  33,
{ 7: }
  7,
  33,
{ 8: }
  8,
  33,
{ 9: }
  9,
  26,
  33,
{ 10: }
  10,
  33,
{ 11: }
  11,
  33,
{ 12: }
  12,
  33,
{ 13: }
  13,
  33,
{ 14: }
  14,
  33,
{ 15: }
  15,
  33,
{ 16: }
  16,
  33,
{ 17: }
  18,
  33,
{ 18: }
  19,
  33,
{ 19: }
  22,
  33,
{ 20: }
  23,
  33,
{ 21: }
  33,
{ 22: }
  26,
  33,
{ 23: }
  33,
{ 24: }
  33,
{ 25: }
  33,
{ 26: }
  33,
{ 27: }
  33,
{ 28: }
  32,
  33,
{ 29: }
  32,
  33,
{ 30: }
  32,
  33,
{ 31: }
  32,
  33,
{ 32: }
  32,
  33,
{ 33: }
  32,
  33,
{ 34: }
  33,
{ 35: }
  2,
{ 36: }
  1,
{ 37: }
  4,
{ 38: }
  5,
{ 39: }
  6,
{ 40: }
  17,
{ 41: }
  26,
{ 42: }
  24,
{ 43: }
{ 44: }
{ 45: }
  25,
{ 46: }
{ 47: }
{ 48: }
{ 49: }
  30,
{ 50: }
{ 51: }
  32,
{ 52: }
  32,
{ 53: }
  32,
{ 54: }
  32,
{ 55: }
  32,
{ 56: }
  32,
{ 57: }
  32,
{ 58: }
  32,
{ 59: }
  30,
  32,
{ 60: }
  30,
  32,
{ 61: }
  32,
{ 62: }
  32,
{ 63: }
{ 64: }
  28,
{ 65: }
{ 66: }
  31,
{ 67: }
  32,
{ 68: }
  32,
{ 69: }
  28,
  32,
{ 70: }
  28,
  32,
{ 71: }
  32,
{ 72: }
  32,
{ 73: }
  31,
  32,
{ 74: }
  31,
  32,
{ 75: }
{ 76: }
  29,
{ 77: }
  32,
{ 78: }
  32,
{ 79: }
  29,
  32,
{ 80: }
  29,
  32,
{ 81: }
{ 82: }
  32,
{ 83: }
  32,
{ 84: }
  27,
{ 85: }
  27,
  32,
{ 86: }
  27,
  32
);

yyt : array [1..yyntrans] of YYTrec = (
{ 0: }
  ( cc: [ #1..#8,#11..#31,'#','$','''','<','>','@'..'D',
            'G'..'R','V'..'Z','\','^','`','{'..#255 ]; s: 34),
  ( cc: [ #9,' ' ]; s: 2),
  ( cc: [ #10 ]; s: 3),
  ( cc: [ '!' ]; s: 7),
  ( cc: [ '"' ]; s: 21),
  ( cc: [ '%' ]; s: 19),
  ( cc: [ '&' ]; s: 6),
  ( cc: [ '(' ]; s: 14),
  ( cc: [ ')' ]; s: 15),
  ( cc: [ '*' ]; s: 5),
  ( cc: [ '+' ]; s: 17),
  ( cc: [ ',' ]; s: 10),
  ( cc: [ '-' ]; s: 18),
  ( cc: [ '.' ]; s: 9),
  ( cc: [ '/' ]; s: 4),
  ( cc: [ '0'..'9' ]; s: 22),
  ( cc: [ ':' ]; s: 8),
  ( cc: [ ';' ]; s: 11),
  ( cc: [ '=' ]; s: 16),
  ( cc: [ '?' ]; s: 20),
  ( cc: [ 'E' ]; s: 23),
  ( cc: [ 'F' ]; s: 24),
  ( cc: [ 'S' ]; s: 25),
  ( cc: [ 'T' ]; s: 26),
  ( cc: [ 'U' ]; s: 27),
  ( cc: [ '[' ]; s: 12),
  ( cc: [ ']' ]; s: 13),
  ( cc: [ '_','a'..'d','g'..'r','v'..'z' ]; s: 33),
  ( cc: [ 'e' ]; s: 28),
  ( cc: [ 'f' ]; s: 29),
  ( cc: [ 's' ]; s: 30),
  ( cc: [ 't' ]; s: 31),
  ( cc: [ 'u' ]; s: 32),
{ 1: }
  ( cc: [ #1..#8,#11..#31,'#','$','''','<','>','@'..'D',
            'G'..'R','V'..'Z','\','^','`','{'..#255 ]; s: 34),
  ( cc: [ #9,' ' ]; s: 2),
  ( cc: [ #10 ]; s: 3),
  ( cc: [ '!' ]; s: 7),
  ( cc: [ '"' ]; s: 21),
  ( cc: [ '%' ]; s: 19),
  ( cc: [ '&' ]; s: 6),
  ( cc: [ '(' ]; s: 14),
  ( cc: [ ')' ]; s: 15),
  ( cc: [ '*' ]; s: 5),
  ( cc: [ '+' ]; s: 17),
  ( cc: [ ',' ]; s: 10),
  ( cc: [ '-' ]; s: 18),
  ( cc: [ '.' ]; s: 9),
  ( cc: [ '/' ]; s: 4),
  ( cc: [ '0'..'9' ]; s: 22),
  ( cc: [ ':' ]; s: 8),
  ( cc: [ ';' ]; s: 11),
  ( cc: [ '=' ]; s: 16),
  ( cc: [ '?' ]; s: 20),
  ( cc: [ 'E' ]; s: 23),
  ( cc: [ 'F' ]; s: 24),
  ( cc: [ 'S' ]; s: 25),
  ( cc: [ 'T' ]; s: 26),
  ( cc: [ 'U' ]; s: 27),
  ( cc: [ '[' ]; s: 12),
  ( cc: [ ']' ]; s: 13),
  ( cc: [ '_','a'..'d','g'..'r','v'..'z' ]; s: 33),
  ( cc: [ 'e' ]; s: 28),
  ( cc: [ 'f' ]; s: 29),
  ( cc: [ 's' ]; s: 30),
  ( cc: [ 't' ]; s: 31),
  ( cc: [ 'u' ]; s: 32),
{ 2: }
  ( cc: [ #9,' ' ]; s: 35),
  ( cc: [ #10 ]; s: 36),
{ 3: }
{ 4: }
  ( cc: [ '/' ]; s: 37),
{ 5: }
  ( cc: [ '*' ]; s: 38),
{ 6: }
  ( cc: [ '&' ]; s: 39),
{ 7: }
{ 8: }
  ( cc: [ '=' ]; s: 40),
{ 9: }
  ( cc: [ '.','0'..'9' ]; s: 41),
{ 10: }
{ 11: }
{ 12: }
{ 13: }
{ 14: }
{ 15: }
{ 16: }
{ 17: }
{ 18: }
{ 19: }
{ 20: }
  ( cc: [ '?' ]; s: 42),
{ 21: }
  ( cc: [ #1..'!','#'..'[',']'..#255 ]; s: 43),
  ( cc: [ '"' ]; s: 45),
  ( cc: [ '\' ]; s: 44),
{ 22: }
  ( cc: [ '.','0'..'9' ]; s: 41),
{ 23: }
  ( cc: [ 'N','n' ]; s: 46),
{ 24: }
  ( cc: [ 'O','o' ]; s: 47),
{ 25: }
  ( cc: [ 'K','k' ]; s: 48),
{ 26: }
  ( cc: [ 'O','o' ]; s: 49),
{ 27: }
  ( cc: [ 'S','s' ]; s: 50),
{ 28: }
  ( cc: [ '0'..'9','A'..'M','O'..'Z' ]; s: 54),
  ( cc: [ 'N' ]; s: 51),
  ( cc: [ '_','a'..'m','o'..'z' ]; s: 53),
  ( cc: [ 'n' ]; s: 52),
{ 29: }
  ( cc: [ '0'..'9','A'..'N','P'..'Z' ]; s: 54),
  ( cc: [ 'O' ]; s: 55),
  ( cc: [ '_','a'..'n','p'..'z' ]; s: 53),
  ( cc: [ 'o' ]; s: 56),
{ 30: }
  ( cc: [ '0'..'9','A'..'J','L'..'Z' ]; s: 54),
  ( cc: [ 'K' ]; s: 57),
  ( cc: [ '_','a'..'j','l'..'z' ]; s: 53),
  ( cc: [ 'k' ]; s: 58),
{ 31: }
  ( cc: [ '0'..'9','A'..'N','P'..'Z' ]; s: 54),
  ( cc: [ 'O' ]; s: 59),
  ( cc: [ '_','a'..'n','p'..'z' ]; s: 53),
  ( cc: [ 'o' ]; s: 60),
{ 32: }
  ( cc: [ '0'..'9','A'..'R','T'..'Z' ]; s: 54),
  ( cc: [ 'S' ]; s: 61),
  ( cc: [ '_','a'..'r','t'..'z' ]; s: 53),
  ( cc: [ 's' ]; s: 62),
{ 33: }
  ( cc: [ '0'..'9','A'..'Z' ]; s: 54),
  ( cc: [ '_','a'..'z' ]; s: 53),
{ 34: }
{ 35: }
  ( cc: [ #9,' ' ]; s: 35),
  ( cc: [ #10 ]; s: 36),
{ 36: }
{ 37: }
{ 38: }
{ 39: }
{ 40: }
{ 41: }
  ( cc: [ '.','0'..'9' ]; s: 41),
{ 42: }
{ 43: }
  ( cc: [ #1..'!','#'..'[',']'..#255 ]; s: 43),
  ( cc: [ '"' ]; s: 45),
  ( cc: [ '\' ]; s: 44),
{ 44: }
  ( cc: [ #1..#9,#11..#255 ]; s: 43),
{ 45: }
{ 46: }
  ( cc: [ 'D','d' ]; s: 63),
{ 47: }
  ( cc: [ 'R','r' ]; s: 64),
{ 48: }
  ( cc: [ 'I','i' ]; s: 65),
{ 49: }
{ 50: }
  ( cc: [ 'E','e' ]; s: 66),
{ 51: }
  ( cc: [ '0'..'9','A'..'C','E'..'Z','_','a'..'c','e'..'z' ]; s: 54),
  ( cc: [ 'D','d' ]; s: 67),
{ 52: }
  ( cc: [ '0'..'9','A'..'C','E'..'Z' ]; s: 54),
  ( cc: [ 'D' ]; s: 67),
  ( cc: [ '_','a'..'c','e'..'z' ]; s: 53),
  ( cc: [ 'd' ]; s: 68),
{ 53: }
  ( cc: [ '0'..'9','A'..'Z' ]; s: 54),
  ( cc: [ '_','a'..'z' ]; s: 53),
{ 54: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 54),
{ 55: }
  ( cc: [ '0'..'9','A'..'Q','S'..'Z','_','a'..'q','s'..'z' ]; s: 54),
  ( cc: [ 'R','r' ]; s: 69),
{ 56: }
  ( cc: [ '0'..'9','A'..'Q','S'..'Z' ]; s: 54),
  ( cc: [ 'R' ]; s: 69),
  ( cc: [ '_','a'..'q','s'..'z' ]; s: 53),
  ( cc: [ 'r' ]; s: 70),
{ 57: }
  ( cc: [ '0'..'9','A'..'H','J'..'Z','_','a'..'h','j'..'z' ]; s: 54),
  ( cc: [ 'I','i' ]; s: 71),
{ 58: }
  ( cc: [ '0'..'9','A'..'H','J'..'Z' ]; s: 54),
  ( cc: [ 'I' ]; s: 71),
  ( cc: [ '_','a'..'h','j'..'z' ]; s: 53),
  ( cc: [ 'i' ]; s: 72),
{ 59: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 54),
{ 60: }
  ( cc: [ '0'..'9','A'..'Z' ]; s: 54),
  ( cc: [ '_','a'..'z' ]; s: 53),
{ 61: }
  ( cc: [ '0'..'9','A'..'D','F'..'Z','_','a'..'d','f'..'z' ]; s: 54),
  ( cc: [ 'E','e' ]; s: 73),
{ 62: }
  ( cc: [ '0'..'9','A'..'D','F'..'Z' ]; s: 54),
  ( cc: [ 'E' ]; s: 73),
  ( cc: [ '_','a'..'d','f'..'z' ]; s: 53),
  ( cc: [ 'e' ]; s: 74),
{ 63: }
  ( cc: [ 'F','f' ]; s: 75),
{ 64: }
{ 65: }
  ( cc: [ 'P','p' ]; s: 76),
{ 66: }
{ 67: }
  ( cc: [ '0'..'9','A'..'E','G'..'Z','_','a'..'e','g'..'z' ]; s: 54),
  ( cc: [ 'F','f' ]; s: 77),
{ 68: }
  ( cc: [ '0'..'9','A'..'E','G'..'Z' ]; s: 54),
  ( cc: [ 'F' ]; s: 77),
  ( cc: [ '_','a'..'e','g'..'z' ]; s: 53),
  ( cc: [ 'f' ]; s: 78),
{ 69: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 54),
{ 70: }
  ( cc: [ '0'..'9','A'..'Z' ]; s: 54),
  ( cc: [ '_','a'..'z' ]; s: 53),
{ 71: }
  ( cc: [ '0'..'9','A'..'O','Q'..'Z','_','a'..'o','q'..'z' ]; s: 54),
  ( cc: [ 'P','p' ]; s: 79),
{ 72: }
  ( cc: [ '0'..'9','A'..'O','Q'..'Z' ]; s: 54),
  ( cc: [ 'P' ]; s: 79),
  ( cc: [ '_','a'..'o','q'..'z' ]; s: 53),
  ( cc: [ 'p' ]; s: 80),
{ 73: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 54),
{ 74: }
  ( cc: [ '0'..'9','A'..'Z' ]; s: 54),
  ( cc: [ '_','a'..'z' ]; s: 53),
{ 75: }
  ( cc: [ 'O','o' ]; s: 81),
{ 76: }
{ 77: }
  ( cc: [ '0'..'9','A'..'N','P'..'Z','_','a'..'n','p'..'z' ]; s: 54),
  ( cc: [ 'O','o' ]; s: 82),
{ 78: }
  ( cc: [ '0'..'9','A'..'N','P'..'Z' ]; s: 54),
  ( cc: [ 'O' ]; s: 82),
  ( cc: [ '_','a'..'n','p'..'z' ]; s: 53),
  ( cc: [ 'o' ]; s: 83),
{ 79: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 54),
{ 80: }
  ( cc: [ '0'..'9','A'..'Z' ]; s: 54),
  ( cc: [ '_','a'..'z' ]; s: 53),
{ 81: }
  ( cc: [ 'R','r' ]; s: 84),
{ 82: }
  ( cc: [ '0'..'9','A'..'Q','S'..'Z','_','a'..'q','s'..'z' ]; s: 54),
  ( cc: [ 'R','r' ]; s: 85),
{ 83: }
  ( cc: [ '0'..'9','A'..'Q','S'..'Z' ]; s: 54),
  ( cc: [ 'R' ]; s: 85),
  ( cc: [ '_','a'..'q','s'..'z' ]; s: 53),
  ( cc: [ 'r' ]; s: 86),
{ 84: }
{ 85: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 54),
{ 86: }
  ( cc: [ '0'..'9','A'..'Z' ]; s: 54),
  ( cc: [ '_','a'..'z' ]; s: 53)
);

yykl : array [0..yynstates-1] of Integer = (
{ 0: } 1,
{ 1: } 3,
{ 2: } 5,
{ 3: } 7,
{ 4: } 9,
{ 5: } 11,
{ 6: } 13,
{ 7: } 14,
{ 8: } 16,
{ 9: } 18,
{ 10: } 21,
{ 11: } 23,
{ 12: } 25,
{ 13: } 27,
{ 14: } 29,
{ 15: } 31,
{ 16: } 33,
{ 17: } 35,
{ 18: } 37,
{ 19: } 39,
{ 20: } 41,
{ 21: } 43,
{ 22: } 44,
{ 23: } 46,
{ 24: } 47,
{ 25: } 48,
{ 26: } 49,
{ 27: } 50,
{ 28: } 51,
{ 29: } 53,
{ 30: } 55,
{ 31: } 57,
{ 32: } 59,
{ 33: } 61,
{ 34: } 63,
{ 35: } 64,
{ 36: } 65,
{ 37: } 66,
{ 38: } 67,
{ 39: } 68,
{ 40: } 69,
{ 41: } 70,
{ 42: } 71,
{ 43: } 72,
{ 44: } 72,
{ 45: } 72,
{ 46: } 73,
{ 47: } 73,
{ 48: } 73,
{ 49: } 73,
{ 50: } 74,
{ 51: } 74,
{ 52: } 75,
{ 53: } 76,
{ 54: } 77,
{ 55: } 78,
{ 56: } 79,
{ 57: } 80,
{ 58: } 81,
{ 59: } 82,
{ 60: } 84,
{ 61: } 86,
{ 62: } 87,
{ 63: } 88,
{ 64: } 88,
{ 65: } 89,
{ 66: } 89,
{ 67: } 90,
{ 68: } 91,
{ 69: } 92,
{ 70: } 94,
{ 71: } 96,
{ 72: } 97,
{ 73: } 98,
{ 74: } 100,
{ 75: } 102,
{ 76: } 102,
{ 77: } 103,
{ 78: } 104,
{ 79: } 105,
{ 80: } 107,
{ 81: } 109,
{ 82: } 109,
{ 83: } 110,
{ 84: } 111,
{ 85: } 112,
{ 86: } 114
);

yykh : array [0..yynstates-1] of Integer = (
{ 0: } 2,
{ 1: } 4,
{ 2: } 6,
{ 3: } 8,
{ 4: } 10,
{ 5: } 12,
{ 6: } 13,
{ 7: } 15,
{ 8: } 17,
{ 9: } 20,
{ 10: } 22,
{ 11: } 24,
{ 12: } 26,
{ 13: } 28,
{ 14: } 30,
{ 15: } 32,
{ 16: } 34,
{ 17: } 36,
{ 18: } 38,
{ 19: } 40,
{ 20: } 42,
{ 21: } 43,
{ 22: } 45,
{ 23: } 46,
{ 24: } 47,
{ 25: } 48,
{ 26: } 49,
{ 27: } 50,
{ 28: } 52,
{ 29: } 54,
{ 30: } 56,
{ 31: } 58,
{ 32: } 60,
{ 33: } 62,
{ 34: } 63,
{ 35: } 64,
{ 36: } 65,
{ 37: } 66,
{ 38: } 67,
{ 39: } 68,
{ 40: } 69,
{ 41: } 70,
{ 42: } 71,
{ 43: } 71,
{ 44: } 71,
{ 45: } 72,
{ 46: } 72,
{ 47: } 72,
{ 48: } 72,
{ 49: } 73,
{ 50: } 73,
{ 51: } 74,
{ 52: } 75,
{ 53: } 76,
{ 54: } 77,
{ 55: } 78,
{ 56: } 79,
{ 57: } 80,
{ 58: } 81,
{ 59: } 83,
{ 60: } 85,
{ 61: } 86,
{ 62: } 87,
{ 63: } 87,
{ 64: } 88,
{ 65: } 88,
{ 66: } 89,
{ 67: } 90,
{ 68: } 91,
{ 69: } 93,
{ 70: } 95,
{ 71: } 96,
{ 72: } 97,
{ 73: } 99,
{ 74: } 101,
{ 75: } 101,
{ 76: } 102,
{ 77: } 103,
{ 78: } 104,
{ 79: } 106,
{ 80: } 108,
{ 81: } 108,
{ 82: } 109,
{ 83: } 110,
{ 84: } 111,
{ 85: } 113,
{ 86: } 115
);

yyml : array [0..yynstates-1] of Integer = (
{ 0: } 1,
{ 1: } 3,
{ 2: } 5,
{ 3: } 7,
{ 4: } 9,
{ 5: } 11,
{ 6: } 13,
{ 7: } 14,
{ 8: } 16,
{ 9: } 18,
{ 10: } 21,
{ 11: } 23,
{ 12: } 25,
{ 13: } 27,
{ 14: } 29,
{ 15: } 31,
{ 16: } 33,
{ 17: } 35,
{ 18: } 37,
{ 19: } 39,
{ 20: } 41,
{ 21: } 43,
{ 22: } 44,
{ 23: } 46,
{ 24: } 47,
{ 25: } 48,
{ 26: } 49,
{ 27: } 50,
{ 28: } 51,
{ 29: } 53,
{ 30: } 55,
{ 31: } 57,
{ 32: } 59,
{ 33: } 61,
{ 34: } 63,
{ 35: } 64,
{ 36: } 65,
{ 37: } 66,
{ 38: } 67,
{ 39: } 68,
{ 40: } 69,
{ 41: } 70,
{ 42: } 71,
{ 43: } 72,
{ 44: } 72,
{ 45: } 72,
{ 46: } 73,
{ 47: } 73,
{ 48: } 73,
{ 49: } 73,
{ 50: } 74,
{ 51: } 74,
{ 52: } 75,
{ 53: } 76,
{ 54: } 77,
{ 55: } 78,
{ 56: } 79,
{ 57: } 80,
{ 58: } 81,
{ 59: } 82,
{ 60: } 84,
{ 61: } 86,
{ 62: } 87,
{ 63: } 88,
{ 64: } 88,
{ 65: } 89,
{ 66: } 89,
{ 67: } 90,
{ 68: } 91,
{ 69: } 92,
{ 70: } 94,
{ 71: } 96,
{ 72: } 97,
{ 73: } 98,
{ 74: } 100,
{ 75: } 102,
{ 76: } 102,
{ 77: } 103,
{ 78: } 104,
{ 79: } 105,
{ 80: } 107,
{ 81: } 109,
{ 82: } 109,
{ 83: } 110,
{ 84: } 111,
{ 85: } 112,
{ 86: } 114
);

yymh : array [0..yynstates-1] of Integer = (
{ 0: } 2,
{ 1: } 4,
{ 2: } 6,
{ 3: } 8,
{ 4: } 10,
{ 5: } 12,
{ 6: } 13,
{ 7: } 15,
{ 8: } 17,
{ 9: } 20,
{ 10: } 22,
{ 11: } 24,
{ 12: } 26,
{ 13: } 28,
{ 14: } 30,
{ 15: } 32,
{ 16: } 34,
{ 17: } 36,
{ 18: } 38,
{ 19: } 40,
{ 20: } 42,
{ 21: } 43,
{ 22: } 45,
{ 23: } 46,
{ 24: } 47,
{ 25: } 48,
{ 26: } 49,
{ 27: } 50,
{ 28: } 52,
{ 29: } 54,
{ 30: } 56,
{ 31: } 58,
{ 32: } 60,
{ 33: } 62,
{ 34: } 63,
{ 35: } 64,
{ 36: } 65,
{ 37: } 66,
{ 38: } 67,
{ 39: } 68,
{ 40: } 69,
{ 41: } 70,
{ 42: } 71,
{ 43: } 71,
{ 44: } 71,
{ 45: } 72,
{ 46: } 72,
{ 47: } 72,
{ 48: } 72,
{ 49: } 73,
{ 50: } 73,
{ 51: } 74,
{ 52: } 75,
{ 53: } 76,
{ 54: } 77,
{ 55: } 78,
{ 56: } 79,
{ 57: } 80,
{ 58: } 81,
{ 59: } 83,
{ 60: } 85,
{ 61: } 86,
{ 62: } 87,
{ 63: } 87,
{ 64: } 88,
{ 65: } 88,
{ 66: } 89,
{ 67: } 90,
{ 68: } 91,
{ 69: } 93,
{ 70: } 95,
{ 71: } 96,
{ 72: } 97,
{ 73: } 99,
{ 74: } 101,
{ 75: } 101,
{ 76: } 102,
{ 77: } 103,
{ 78: } 104,
{ 79: } 106,
{ 80: } 108,
{ 81: } 108,
{ 82: } 109,
{ 83: } 110,
{ 84: } 111,
{ 85: } 113,
{ 86: } 115
);

yytl : array [0..yynstates-1] of Integer = (
{ 0: } 1,
{ 1: } 34,
{ 2: } 67,
{ 3: } 69,
{ 4: } 69,
{ 5: } 70,
{ 6: } 71,
{ 7: } 72,
{ 8: } 72,
{ 9: } 73,
{ 10: } 74,
{ 11: } 74,
{ 12: } 74,
{ 13: } 74,
{ 14: } 74,
{ 15: } 74,
{ 16: } 74,
{ 17: } 74,
{ 18: } 74,
{ 19: } 74,
{ 20: } 74,
{ 21: } 75,
{ 22: } 78,
{ 23: } 79,
{ 24: } 80,
{ 25: } 81,
{ 26: } 82,
{ 27: } 83,
{ 28: } 84,
{ 29: } 88,
{ 30: } 92,
{ 31: } 96,
{ 32: } 100,
{ 33: } 104,
{ 34: } 106,
{ 35: } 106,
{ 36: } 108,
{ 37: } 108,
{ 38: } 108,
{ 39: } 108,
{ 40: } 108,
{ 41: } 108,
{ 42: } 109,
{ 43: } 109,
{ 44: } 112,
{ 45: } 113,
{ 46: } 113,
{ 47: } 114,
{ 48: } 115,
{ 49: } 116,
{ 50: } 116,
{ 51: } 117,
{ 52: } 119,
{ 53: } 123,
{ 54: } 125,
{ 55: } 126,
{ 56: } 128,
{ 57: } 132,
{ 58: } 134,
{ 59: } 138,
{ 60: } 139,
{ 61: } 141,
{ 62: } 143,
{ 63: } 147,
{ 64: } 148,
{ 65: } 148,
{ 66: } 149,
{ 67: } 149,
{ 68: } 151,
{ 69: } 155,
{ 70: } 156,
{ 71: } 158,
{ 72: } 160,
{ 73: } 164,
{ 74: } 165,
{ 75: } 167,
{ 76: } 168,
{ 77: } 168,
{ 78: } 170,
{ 79: } 174,
{ 80: } 175,
{ 81: } 177,
{ 82: } 178,
{ 83: } 180,
{ 84: } 184,
{ 85: } 184,
{ 86: } 185
);

yyth : array [0..yynstates-1] of Integer = (
{ 0: } 33,
{ 1: } 66,
{ 2: } 68,
{ 3: } 68,
{ 4: } 69,
{ 5: } 70,
{ 6: } 71,
{ 7: } 71,
{ 8: } 72,
{ 9: } 73,
{ 10: } 73,
{ 11: } 73,
{ 12: } 73,
{ 13: } 73,
{ 14: } 73,
{ 15: } 73,
{ 16: } 73,
{ 17: } 73,
{ 18: } 73,
{ 19: } 73,
{ 20: } 74,
{ 21: } 77,
{ 22: } 78,
{ 23: } 79,
{ 24: } 80,
{ 25: } 81,
{ 26: } 82,
{ 27: } 83,
{ 28: } 87,
{ 29: } 91,
{ 30: } 95,
{ 31: } 99,
{ 32: } 103,
{ 33: } 105,
{ 34: } 105,
{ 35: } 107,
{ 36: } 107,
{ 37: } 107,
{ 38: } 107,
{ 39: } 107,
{ 40: } 107,
{ 41: } 108,
{ 42: } 108,
{ 43: } 111,
{ 44: } 112,
{ 45: } 112,
{ 46: } 113,
{ 47: } 114,
{ 48: } 115,
{ 49: } 115,
{ 50: } 116,
{ 51: } 118,
{ 52: } 122,
{ 53: } 124,
{ 54: } 125,
{ 55: } 127,
{ 56: } 131,
{ 57: } 133,
{ 58: } 137,
{ 59: } 138,
{ 60: } 140,
{ 61: } 142,
{ 62: } 146,
{ 63: } 147,
{ 64: } 147,
{ 65: } 148,
{ 66: } 148,
{ 67: } 150,
{ 68: } 154,
{ 69: } 155,
{ 70: } 157,
{ 71: } 159,
{ 72: } 163,
{ 73: } 164,
{ 74: } 166,
{ 75: } 167,
{ 76: } 167,
{ 77: } 169,
{ 78: } 173,
{ 79: } 174,
{ 80: } 176,
{ 81: } 177,
{ 82: } 179,
{ 83: } 183,
{ 84: } 183,
{ 85: } 184,
{ 86: } 186
);


var yyn : Integer;

label start, scan, action;

begin

start:

  (* initialize: *)

  yynew;

scan:

  (* mark positions and matches: *)

  for yyn := yykl[yystate] to     yykh[yystate] do yymark(yyk[yyn]);
  for yyn := yymh[yystate] downto yyml[yystate] do yymatch(yym[yyn]);

  if yytl[yystate]>yyth[yystate] then goto action; (* dead state *)

  (* get next character: *)

  yyscan;

  (* determine action: *)

  yyn := yytl[yystate];
  while (yyn<=yyth[yystate]) and not (yyactchar in yyt[yyn].cc) do inc(yyn);
  if yyn>yyth[yystate] then goto action;
    (* no transition on yyactchar in this state *)

  (* switch to new state: *)

  yystate := yyt[yyn].s;

  goto scan;

action:

  (* execute action: *)

  if yyfind(yyrule) then
    begin
      yyaction(yyrule);
      if yyreject then goto action;
    end
  else if not yydefault and yywrap then
    begin
      yyclear;
      return(0);
    end;

  if not yydone then goto start;

  yylex := yyretval;

end(*yylex*);



